package analisis;

// Importaciones
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import abstracto.Instruccion;
import simbolo.Tipo;
import simbolo.tipoDato;

// Instrucciones
import instruccuiones.Print;

// Expresiones
import expresiones.Nativo;

// Parser
parser code
{:
    scanner s;
    parser(scanner s){this.s = s;}
    
    public void syntax_error(Symbol s){
        System.out.println("Error Sintactico en la linea " +
        (s.left) + " y columna " + (s.right) +
        ". No se esperaba el componente: " + (s.value) + ".");
    }

    public void unrecovered_syntax_error (Symbol s){
        System.out.println("Error Sintactico no recuperable en la linea" +
        (s.left) + " y columna " + (s.right) +
        ". No se esperaba el componente: " + (s.value) + ".");
    }

:}

action code
{:
:}

// Terminales
terminal String CADENA, ENTERO, DECIMAL;
terminal FINCADENA, IMPRIMIR;
terminal PAR1, PAR2;

// No terminales
nonterminal LinkedList<Instruccion> INICIO, INSTRUCCIONES;
nonterminal Instruccion INSTRUCCION;
nonterminal Instruccion EXPRESION;

start with INICIO;

INICIO ::= INSTRUCCIONES
;

INSTRUCCIONES ::= INSTRUCCIONES INSTRUCCION
                | INSTRUCCION
;

INSTRUCCION ::= IMPRIMIR PAR1 EXPRESION PAR2 FINCADENA      {:  RESULT = new Print(a, aleft, aright);  :}
;

EXPRESION ::= ENTERO:a      {:  RESULT = new Nativo(Integer.parseInt(a), new Tipo(tipoDato.ENTERO), aleft, aright);  :} 
            | DECIMAL:a     {:  RESULT = new Nativo(new Double(a), new Tipo(tipoDato.DECIMAL), aleft, aright);  :}
            | CADENA:a      {:  RESULT = new Nativo(a, new Tipo(tipoDato.CADENA), aleft, aright);  :}
;